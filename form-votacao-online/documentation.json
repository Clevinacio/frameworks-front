{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-5955822f7dbe798928ea0b876c5a3928",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "VoteService",
            "id": "injectable-VoteService-9289f257b42103d127758cd7fc522cbb",
            "file": "src/app/vote-service.service.ts",
            "properties": [
                {
                    "name": "votes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VoteType[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [
                {
                    "name": "createVote",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteVote",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateVote",
                    "args": [
                        {
                            "name": "vote",
                            "type": "VoteType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vote",
                            "type": "VoteType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\ntype OptionsType = {\r\n    option: string,\r\n    count: number\r\n}\r\n\r\ntype VoteType = {\r\n    statement: string,\r\n    options: OptionsType[]\r\n};\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VoteService {\r\n    votes: VoteType[] = []\r\n\r\n    createVote() {\r\n        this.votes.push({\r\n            statement: '',\r\n            options: [\r\n                { option: '', count: 0 },\r\n                { option: '', count: 0 },\r\n                { option: '', count: 0 },\r\n            ]\r\n        });\r\n    }\r\n\r\n    updateVote(vote: VoteType, index: number) {\r\n        this.votes[index] = vote;\r\n    }\r\n\r\n    deleteVote(index: number) {\r\n        this.votes.splice(index, 1);\r\n    }\r\n}\r\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9f6efb42729f68b4a3f51693ef8f1cc8",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'form-votacao-online'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'form-votacao-online';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".containerApp{\r\n    margin-left: 30px;\r\n    margin-top: 20px;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"containerApp\">\r\n    <h1>Angular</h1>\r\n    <vote-list></vote-list>\r\n</div>"
        },
        {
            "name": "CabineComponent",
            "id": "component-CabineComponent-5a7f12cc5c9bb2ac6c48096dbe49e795",
            "file": "src/app/cabine/cabine.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cabine",
            "styleUrls": [
                "./cabine.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cabine.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "OptionsType[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\ntype OptionsType = {\r\n    option: string,\r\n    count: number\r\n}\r\n\r\n@Component({\r\n    selector: 'cabine',\r\n    templateUrl: './cabine.component.html',\r\n    styleUrls: ['./cabine.component.scss']\r\n})\r\nexport class CabineComponent {\r\n    @Input() options!: OptionsType[];\r\n    @Output() click = new EventEmitter<number>();\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".question{\r\n  display: flex;\r\n  text-align: center;\r\n\r\n  h2{\r\n    font-family: 'Poppins', sans-serif;\r\n    font-weight: 700;\r\n    width: 100%;\r\n    color: rgb(242, 248, 250);\r\n    margin: 20px;\r\n    align-self: center;\r\n  }\r\n}\r\n\r\n.options{\r\n  margin: 30px auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  button{\r\n    max-width: 120px;\r\n    height: 30px;\r\n    padding: 0px 30px;\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n    color: rgb(234, 246, 255);\r\n    background: rgb(184, 38, 38);\r\n    border: 0;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n  \r\n    transition: filter 0.2s;\r\n  \r\n    &:hover{\r\n      filter: brightness(0.9);\r\n    }}\r\n}",
                    "styleUrl": "./cabine.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"options\">\r\n    <button *ngFor=\"let option of options; index as i\" (click)=\"click.emit(i)\">\r\n        {{option.option}}\r\n    </button>\r\n</div>"
        },
        {
            "name": "CardVotacaoComponent",
            "id": "component-CardVotacaoComponent-72a6e1021e3d6de0c20c841f697ac60e",
            "file": "src/app/card-votacao/card-votacao.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-votacao",
            "styleUrls": [
                "./card-votacao.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-votacao.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "OptionsType[]"
                },
                {
                    "name": "statement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "localOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OptionsType[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "mode",
                    "defaultValue": "'open'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "voteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VoteService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showResult",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "vote",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { VoteService } from '../vote-service.service';\r\n\r\ntype OptionsType = {\r\n    option: string,\r\n    count: number\r\n}\r\n\r\n@Component({\r\n    selector: 'card-votacao',\r\n    templateUrl: './card-votacao.component.html',\r\n    styleUrls: ['./card-votacao.component.scss']\r\n})\r\nexport class CardVotacaoComponent implements OnInit {\r\n    @Input()\r\n    statement!: string\r\n    @Input()\r\n    options!: OptionsType[]\r\n\r\n    localOptions: OptionsType[] = [];\r\n    mode: string = 'open';\r\n\r\n    constructor(public voteService: VoteService) { }\r\n\r\n    ngOnInit() {\r\n        console.log(this.options);\r\n        this.localOptions = this.options;\r\n    }\r\n\r\n\r\n    vote(index: number) {\r\n        this.localOptions[index].count += 1;\r\n    }\r\n\r\n    showResult() {\r\n        this.mode = 'closed';\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n  margin: 100px auto;\r\n  \r\n  background:rgb(221, 150, 150);\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 400px;\r\n  height: 40vh;\r\n  border-radius: 8px;\r\n  box-shadow: 1 3px 12px rgba(0, 0, 0, 0.233);\r\n\r\n}\r\n\r\n.question{\r\n  display: flex;\r\n  text-align: center;\r\n\r\n  h2{\r\n    font-family: 'Poppins', sans-serif;\r\n    font-weight: 700;\r\n    width: 100%;\r\n    color: rgb(242, 248, 250);\r\n    margin: 20px;\r\n    align-self: center;\r\n  }\r\n}\r\n\r\n// .content{\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   width: 100%;\r\n//   margin: 0 auto;\r\n//   align-self: center;\r\n//   justify-content: center;\r\n// }",
                    "styleUrl": "./card-votacao.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "voteService",
                        "type": "VoteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "voteService",
                        "type": "VoteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <div class=\"question\">\r\n        <h2>{{statement}}</h2>\r\n    </div>\r\n    <div *ngIf=\"mode === 'open'\">\r\n        <cabine [options]=\"localOptions\" (click)=\"vote($event); showResult()\">\r\n        </cabine>\r\n    </div>\r\n    <div *ngIf=\"mode !== 'open'\">\r\n        <resultado *ngIf=\"localOptions\" [voteOptions]=\"localOptions\"></resultado>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ResultadoComponent",
            "id": "component-ResultadoComponent-d1114cd02c013f7a7fe7e1f4d32ad022",
            "file": "src/app/resultado/resultado.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "resultado",
            "styleUrls": [
                "./resultado.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./resultado.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "voteOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "OptionsType[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "total",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "totalVotos",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\ntype OptionsType = {\r\n    count: number,\r\n    option: string\r\n}\r\n\r\n@Component({\r\n    selector: 'resultado',\r\n    templateUrl: './resultado.component.html',\r\n    styleUrls: ['./resultado.component.scss']\r\n})\r\nexport class ResultadoComponent implements OnInit {\r\n    @Input() voteOptions!: OptionsType[];\r\n    total: number = 0;\r\n\r\n    ngOnInit() {\r\n        this.total = this.totalVotos();\r\n    }\r\n\r\n    totalVotos = () => {\r\n        console.log(this.voteOptions);\r\n        let total = 0\r\n        this.voteOptions.forEach(option => {\r\n            total += option.count\r\n        })\r\n        return total\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div{\r\n  margin: 0 50px;\r\n  p{\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    font-family: 'Roboto', sans-serif;\r\n    color: #f0f0f0;\r\n  }\r\n}",
                    "styleUrl": "./resultado.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n    <p *ngFor=\"let option of voteOptions; index as i\">\r\n        {{i+1}}. {{option.option}} - {{option.count}} votos ({{(option.count/total)*100}}%)\r\n    </p>\r\n</div>"
        },
        {
            "name": "VoteFormComponent",
            "id": "component-VoteFormComponent-b08c53635d6d16ff3b8070da5b635d8d",
            "file": "src/app/vote-form/vote-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vote-form",
            "styleUrls": [
                "./vote-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vote-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "vote",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "VoteType"
                }
            ],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "update",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "vt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataVoteType",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, } from '@angular/core';\r\n\r\ntype OptionsType = {\r\n    option: string,\r\n    count: number\r\n}\r\n\r\ntype VoteType = {\r\n    statement: string,\r\n    options: OptionsType[]\r\n};\r\n\r\ntype DataVoteType = {\r\n    statement: string,\r\n    voteOption1: string,\r\n    voteOption2: string,\r\n    voteOption3: string,\r\n}\r\n\r\n@Component({\r\n    selector: 'vote-form',\r\n    templateUrl: './vote-form.component.html',\r\n    styleUrls: ['./vote-form.component.scss']\r\n})\r\nexport class VoteFormComponent implements OnInit {\r\n    @Input() vote!: VoteType;\r\n    @Output() cancel = new EventEmitter();\r\n    @Output() update = new EventEmitter();\r\n    vt: DataVoteType;\r\n\r\n    constructor() {\r\n        this.vt = {} as DataVoteType;\r\n    }\r\n\r\n    ngOnInit() {\r\n        const { statement, options } = this.vote || {};\r\n        const [option1, option2, option3] = options || [];\r\n        this.vt = {\r\n            statement: statement,\r\n            voteOption1: option1.option,\r\n            voteOption2: option2.option,\r\n            voteOption3: option3.option,\r\n        };\r\n    }\r\n\r\n    onSubmit(e: Event) {\r\n        var form = document.getElementsByClassName('needs-validation')[0] as HTMLFormElement;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            const options = [\r\n                {\r\n                    option: this.vt.voteOption1,\r\n                    count: 0\r\n                },\r\n                {\r\n                    option: this.vt.voteOption2,\r\n                    count: 0\r\n                },\r\n                {\r\n                    option: this.vt.voteOption3,\r\n                    count: 0\r\n                }\r\n            ].filter((o) => o.option !== '');\r\n            this.update.emit({\r\n                statement: this.vt.statement,\r\n                options\r\n            });\r\n        }\r\n        form.classList.add('was-validated');\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./vote-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"needs-validation\">\r\n    <div class=\"mb-3\">\r\n        <label for=\"statement\" class=\"form-label\">Enunciado*</label>\r\n        <textarea [(ngModel)]=\"vt.statement\" name=\"statement\" type=\"textarea\" class=\"form-control\" id=\"statement\"\r\n            minlength=\"3\" placeholder=\"Digite o enunciado...\" required></textarea>\r\n        <div class=\"invalid-feedback\">O campo é obrigatório e deve conter pelo menos 3 caracteres!</div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label for=\"option1\" class=\"form-label\">Opção 1*</label>\r\n        <input [(ngModel)]=\"vt.voteOption1\" name=\"option1\" type=\"text\" class=\"form-control\" id=\"option1\"\r\n            placeholder=\"Digite a opção 1...\" required>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label for=\"option2\" class=\"form-label\">Opção 2*</label>\r\n        <input [(ngModel)]=\"vt.voteOption2\" name=\"option2\" type=\"text\" class=\"form-control\" id=\"option2\"\r\n            placeholder=\"Digite a opção 2...\" required>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label for=\"option3\" class=\"form-label\">Opção 3</label>\r\n        <input [(ngModel)]=\"vt.voteOption3\" name=\"option3\" type=\"text\" class=\"form-control\" id=\"option3\"\r\n            placeholder=\"Digite a opção 3...\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <span class=\"text-muted\">(*) campos obrigatórios</span><br>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit($event)\">Salvar</button>{{' '}}\r\n    <a class=\"btn btn-secondary\" (click)=\"cancel.emit()\">Cancelar</a>\r\n</form>"
        },
        {
            "name": "VoteListComponent",
            "id": "component-VoteListComponent-640a2eb0dd67f84fe551ed6191fe8983",
            "file": "src/app/vote-list/vote-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vote-list",
            "styleUrls": [
                "./vote-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vote-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "current",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "mode",
                    "defaultValue": "'view'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "voteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VoteService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addVote",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "cancelChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "editVote",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeVote",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showVote",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateChanges",
                    "args": [
                        {
                            "name": "vote",
                            "type": "VoteType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vote",
                            "type": "VoteType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { VoteService } from '../vote-service.service';\r\n\r\ntype OptionsType = {\r\n    option: string,\r\n    count: number\r\n}\r\n\r\ntype VoteType = {\r\n    statement: string,\r\n    options: OptionsType[]\r\n};\r\n\r\n@Component({\r\n    selector: 'vote-list',\r\n    templateUrl: './vote-list.component.html',\r\n    styleUrls: ['./vote-list.component.scss']\r\n})\r\nexport class VoteListComponent {\r\n    mode: string = 'view';\r\n    current: number = 0;\r\n\r\n    constructor(public voteService: VoteService) { }\r\n\r\n    addVote() {\r\n        this.mode = 'add';\r\n        this.voteService.createVote();\r\n        this.current = this.voteService.votes.length - 1;\r\n    }\r\n\r\n    editVote(index: number) {\r\n        this.current = index;\r\n        this.mode = 'edit';\r\n    }\r\n\r\n    removeVote(index: number) {\r\n        this.voteService.deleteVote(index);\r\n    }\r\n\r\n    updateChanges(vote: VoteType) {\r\n        this.voteService.updateVote(vote, this.current);\r\n        this.mode = 'view'\r\n    }\r\n\r\n    cancelChanges() {\r\n        if (this.mode === 'add') {\r\n            this.voteService.deleteVote(this.voteService.votes.length - 1)\r\n        }\r\n        this.mode = 'view'\r\n    }\r\n\r\n    showVote(index: number) {\r\n        this.current = index;\r\n        this.mode = 'show';\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./vote-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "voteService",
                        "type": "VoteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "voteService",
                        "type": "VoteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div *ngIf=\"mode === 'view'\" class=\"row justifiy-conten\">\r\n    <div class=\"col-4\">\r\n        <h2>Votações</h2>\r\n    </div>\r\n    <div class=\"w-100 d-none d-md-block\"></div>\r\n    <div class=\"col-4\">\r\n        <button class=\"btn btn-primary\" (click)=\"addVote()\">Nova votação</button>\r\n    </div>\r\n    <div class=\"w-100 d-none d-md-block\"></div>\r\n    <div class=\"col-6\">\r\n        <p *ngFor=\"let vote of voteService.votes; index as i\">\r\n            <span><b>Enunciado da votação:</b> {{vote.statement}} - </span>\r\n            <button class=\"btn btn-warning\" (click)=\"editVote(i)\">Editar</button>{{' '}}\r\n            <button class=\"btn btn-danger\" (click)=\"removeVote(i)\">Remover</button>{{' '}}\r\n            <button class=\"btn btn-success\" (click)=\"showVote(i)\">Usar</button>\r\n            <br>\r\n            <b>Opções: </b>\r\n            <span *ngFor=\"let o of vote.options; index as i\">\r\n                {{ o.option }}\r\n                <span *ngIf=\"i < vote.options.length - 1\">/ </span>\r\n            </span>\r\n        </p>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"mode === 'show'\">\r\n    <card-votacao [statement]=\"voteService.votes[current].statement\" [options]=\"voteService.votes[current].options\">\r\n    </card-votacao>\r\n</div>\r\n<div *ngIf=\"mode !== 'view' && mode !== 'show'\" class=\"row\">\r\n    <div class=\"col-2\">\r\n        <h2>Formulário</h2>\r\n    </div>\r\n    <div class=\"w-100 d-none d-md-block\"></div>\r\n    <div class=\"col-5\">\r\n        <vote-form [vote]=\"voteService.votes[current]\" (update)=\"updateChanges($event)\" (cancel)=\"cancelChanges()\">\r\n        </vote-form>\r\n    </div>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-85b4ce24acdacfc5426ec2170c36802c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { VoteListComponent } from './vote-list/vote-list.component';\r\nimport { VoteFormComponent } from './vote-form/vote-form.component';\r\nimport { CardVotacaoComponent } from './card-votacao/card-votacao.component';\r\nimport { CabineComponent } from './cabine/cabine.component';\r\nimport { ResultadoComponent } from './resultado/resultado.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        VoteListComponent,\r\n        VoteFormComponent,\r\n        CardVotacaoComponent,\r\n        CabineComponent,\r\n        ResultadoComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        NgbModule,\r\n        FormsModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CabineComponent"
                        },
                        {
                            "name": "CardVotacaoComponent"
                        },
                        {
                            "name": "ResultadoComponent"
                        },
                        {
                            "name": "VoteFormComponent"
                        },
                        {
                            "name": "VoteListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Resultado.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ResultadoComponent>",
                "defaultValue": "(args: ResultadoComponent) => ({\r\n    props: args,\r\n})"
            },
            {
                "name": "Votacao1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Resultado.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Votacao2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Resultado.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "DataVoteType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/vote-form/vote-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OptionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/vote-service.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OptionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/cabine/cabine.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OptionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/resultado/resultado.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OptionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/card-votacao/card-votacao.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OptionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/vote-list/vote-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "OptionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/vote-form/vote-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "VoteType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/vote-service.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "VoteType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/vote-list/vote-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "VoteType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/vote-form/vote-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/stories/Resultado.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Resultado.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ResultadoComponent>",
                    "defaultValue": "(args: ResultadoComponent) => ({\r\n    props: args,\r\n})"
                },
                {
                    "name": "Votacao1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Resultado.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Votacao2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Resultado.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/vote-form/vote-form.component.ts": [
                {
                    "name": "DataVoteType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/vote-form/vote-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "OptionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/vote-form/vote-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "VoteType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/vote-form/vote-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/vote-service.service.ts": [
                {
                    "name": "OptionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/vote-service.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "VoteType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/vote-service.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/cabine/cabine.component.ts": [
                {
                    "name": "OptionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/cabine/cabine.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/resultado/resultado.component.ts": [
                {
                    "name": "OptionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/resultado/resultado.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/card-votacao/card-votacao.component.ts": [
                {
                    "name": "OptionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/card-votacao/card-votacao.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/vote-list/vote-list.component.ts": [
                {
                    "name": "OptionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/vote-list/vote-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "VoteType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/vote-list/vote-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/cabine/cabine.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CabineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/card-votacao/card-votacao.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardVotacaoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/resultado/resultado.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResultadoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/vote-form/vote-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VoteFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/vote-list/vote-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VoteListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/vote-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "VoteService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Resultado.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Resultado.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Votacao1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Resultado.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Votacao2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}